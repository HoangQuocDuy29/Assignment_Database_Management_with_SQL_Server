create database SellingPoint;
go 
use SellingPoint;
go
create table Categories(CateID Char(6) primary key,
						CateName nvarchar(100) not null,
						Description nvarchar(200)
);
go

create table Parts(PartID int identity(1,1) primary key,
						PartName nvarchar(200) not null,
						CateID Char(6) not null,
						Description nvarchar(1000),
						Price money default(0),
						Quantity int default(0),
						Warranty int default(1),
						Photo nvarchar(200) default('photo/nophoto.png'),
						constraint Fk_CateID FOREIGN KEY (CateID) references Categories(CateID)
);
go

insert into Categories(CateID, CateName, Description) values ('001', 'CPU Intel 35', 'Chip Intel san xuat');
insert into Categories(CateID, CateName, Description) values ('002', 'RAM Viet Nam', 'Ram Viet Nam san xuat');
insert into Categories(CateID, CateName, Description) values ('003', 'HDD China', 'O cung cua Trung Quoc San xuat');

go

insert into Parts(PartName, CateID, Description, Price, Quantity, Warranty, Photo) 
			values ('May tinh bo 001', '001', 'May tinh bo 001', 150, 20, 15,'photo/nophoto11.png');
insert into Parts(PartName, CateID, Description, Price, Quantity, Warranty, Photo) 
			values ('May dong bo 002', '002', 'May dong bo 002', 50, 12, 10,'photo/nophoto12.png');
insert into Parts(PartName, CateID, Description, Price, Quantity, Warranty, Photo) 
			values ('May tinh bo 003', '003', 'May tinh bo 003', 260, 5, 25,'photo/nophoto13.png');
go
-- Part 4 --
select * From Parts where Price > 100;
go
-- Part 5 --
select * From Parts where CateID in (select CateID from Categories where CateName like 'CPU%');
go
-- Part 6 --
create view [dbo].[v_Parts] as 
		(select p.PartID, p.PartName, c.CateName, p.Price, p.Quantity from Parts as p 
				inner join Categories as c on p.CateID = c.CateID);
				go
				
-- Part 7 --
create view [dbo].[v_TopParts] as 
		(select top 5 * from Parts order by Price desc);
